[2019-04-23 14:02:35,993] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:02:35,996] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(FromDigestion_2-0 -> Vector(1, 0)), 0 -> Map(FromDigestion_1-0 -> Vector(0, 1), ToDigestion-0 -> Vector(0, 1))) (kafka.controller.KafkaController)
[2019-04-23 14:02:35,997] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:02:35,997] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:02:35,997] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:02:35,997] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:03:04,726] DEBUG [Controller id=0] Delete topics listener fired for topics ToDigestion to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:03:04,726] INFO [Controller id=0] Starting topic deletion for topics ToDigestion (kafka.controller.KafkaController)
[2019-04-23 14:03:04,727] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,728] INFO [Topic Deletion Manager 0], Deletion of topic ToDigestion (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,728] INFO [Topic Deletion Manager 0], Topic deletion callback for ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,734] INFO [Topic Deletion Manager 0], Partition deletion callback for ToDigestion-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,754] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:04,754] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:04,754] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:04,754] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:04,754] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=ToDigestion,Partition=0,Replica=0],[Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,755] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:04,755] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:04,755] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:04,755] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:04,773] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={ToDigestion-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:03:04,774] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,776] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,776] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition ToDigestion-0 of topic ToDigestion in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,777] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={ToDigestion-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:03:04,777] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,778] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,801] INFO [Topic Deletion Manager 0], Deletion of topic ToDigestion successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:04,804] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:03:04,807] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:03:07,803] DEBUG [Controller id=0] Delete topics listener fired for topics FromDigestion_1 to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:03:07,804] INFO [Controller id=0] Starting topic deletion for topics FromDigestion_1 (kafka.controller.KafkaController)
[2019-04-23 14:03:07,804] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,804] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_1 (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,804] INFO [Topic Deletion Manager 0], Topic deletion callback for FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,805] INFO [Topic Deletion Manager 0], Partition deletion callback for FromDigestion_1-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,824] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:07,824] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:07,824] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:07,824] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:07,824] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=FromDigestion_1,Partition=0,Replica=0],[Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,826] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:07,827] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:07,828] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:07,828] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:07,846] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_1-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:03:07,846] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,849] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,850] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition FromDigestion_1-0 of topic FromDigestion_1 in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,860] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_1-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:03:07,861] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,862] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,887] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_1 successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:07,888] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:03:07,890] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:03:11,245] DEBUG [Controller id=0] Delete topics listener fired for topics FromDigestion_2 to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:03:11,246] INFO [Controller id=0] Starting topic deletion for topics FromDigestion_2 (kafka.controller.KafkaController)
[2019-04-23 14:03:11,246] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,246] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_2 (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,246] INFO [Topic Deletion Manager 0], Topic deletion callback for FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,247] INFO [Topic Deletion Manager 0], Partition deletion callback for FromDigestion_2-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,270] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:11,270] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:11,271] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:11,271] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:11,271] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=FromDigestion_2,Partition=0,Replica=0],[Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,275] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:11,275] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:11,276] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:11,276] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:11,297] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:03:11,298] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,298] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,299] INFO [Topic Deletion Manager 0], Deletion for replicas 0 for partition FromDigestion_2-0 of topic FromDigestion_2 in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,300] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:03:11,301] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,302] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,321] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_2 successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:11,324] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:03:11,326] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:03:19,275] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-04-23 14:03:40,982] INFO [Controller id=0] New topics: [Set(ToDigestion)], deleted topics: [Set()], new partition replica assignment [Map(ToDigestion-0 -> Vector(1, 0))] (kafka.controller.KafkaController)
[2019-04-23 14:03:40,982] INFO [Controller id=0] New partition creation callback for ToDigestion-0 (kafka.controller.KafkaController)
[2019-04-23 14:03:43,896] INFO [Controller id=0] New topics: [Set(FromDigestion_1)], deleted topics: [Set()], new partition replica assignment [Map(FromDigestion_1-0 -> Vector(0, 1))] (kafka.controller.KafkaController)
[2019-04-23 14:03:43,896] INFO [Controller id=0] New partition creation callback for FromDigestion_1-0 (kafka.controller.KafkaController)
[2019-04-23 14:03:47,704] INFO [Controller id=0] New topics: [Set(FromDigestion_2)], deleted topics: [Set()], new partition replica assignment [Map(FromDigestion_2-0 -> Vector(0, 1))] (kafka.controller.KafkaController)
[2019-04-23 14:03:47,704] INFO [Controller id=0] New partition creation callback for FromDigestion_2-0 (kafka.controller.KafkaController)
[2019-04-23 14:03:57,798] DEBUG [Controller id=0] Delete topics listener fired for topics ToDigestion to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:03:57,798] INFO [Controller id=0] Starting topic deletion for topics ToDigestion (kafka.controller.KafkaController)
[2019-04-23 14:03:57,798] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,800] INFO [Topic Deletion Manager 0], Deletion of topic ToDigestion (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,800] INFO [Topic Deletion Manager 0], Topic deletion callback for ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,802] INFO [Topic Deletion Manager 0], Partition deletion callback for ToDigestion-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,822] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:57,822] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:57,823] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:57,823] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:57,823] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=ToDigestion,Partition=0,Replica=0],[Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,829] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:57,829] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:57,830] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:57,830] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:03:57,859] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={ToDigestion-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:03:57,860] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,862] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,864] INFO [Topic Deletion Manager 0], Deletion for replicas 0 for partition ToDigestion-0 of topic ToDigestion in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,865] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={ToDigestion-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:03:57,866] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,867] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,889] INFO [Topic Deletion Manager 0], Deletion of topic ToDigestion successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:03:57,893] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:03:57,896] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:04:01,514] DEBUG [Controller id=0] Delete topics listener fired for topics FromDigestion_1 to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:04:01,514] INFO [Controller id=0] Starting topic deletion for topics FromDigestion_1 (kafka.controller.KafkaController)
[2019-04-23 14:04:01,514] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,515] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_1 (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,515] INFO [Topic Deletion Manager 0], Topic deletion callback for FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,519] INFO [Topic Deletion Manager 0], Partition deletion callback for FromDigestion_1-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,544] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:01,544] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:01,545] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:01,545] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:01,545] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=FromDigestion_1,Partition=0,Replica=0],[Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,548] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:01,548] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:01,549] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:01,549] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:01,571] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_1-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:04:01,572] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,573] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,574] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition FromDigestion_1-0 of topic FromDigestion_1 in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,575] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_1-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:04:01,576] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,578] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,609] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_1 successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:01,614] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:04:01,618] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:04:04,543] DEBUG [Controller id=0] Delete topics listener fired for topics FromDigestion_2 to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:04:04,543] INFO [Controller id=0] Starting topic deletion for topics FromDigestion_2 (kafka.controller.KafkaController)
[2019-04-23 14:04:04,543] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,543] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_2 (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,543] INFO [Topic Deletion Manager 0], Topic deletion callback for FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,544] INFO [Topic Deletion Manager 0], Partition deletion callback for FromDigestion_2-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,559] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:04,559] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:04,559] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:04,559] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:04,560] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=FromDigestion_2,Partition=0,Replica=0],[Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,561] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:04,561] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:04,561] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:04,561] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:04,577] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:04:04,577] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,578] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,578] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition FromDigestion_2-0 of topic FromDigestion_2 in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,583] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:04:04,584] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,584] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,597] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_2 successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:04,598] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:04:04,600] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:04:14,346] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-04-23 14:04:36,146] INFO [Controller id=0] New topics: [Set(ToDigestion)], deleted topics: [Set()], new partition replica assignment [Map(ToDigestion-0 -> Vector(0, 1))] (kafka.controller.KafkaController)
[2019-04-23 14:04:36,146] INFO [Controller id=0] New partition creation callback for ToDigestion-0 (kafka.controller.KafkaController)
[2019-04-23 14:04:40,671] INFO [Controller id=0] New topics: [Set(FromDigestion_1)], deleted topics: [Set()], new partition replica assignment [Map(FromDigestion_1-0 -> Vector(0, 1))] (kafka.controller.KafkaController)
[2019-04-23 14:04:40,671] INFO [Controller id=0] New partition creation callback for FromDigestion_1-0 (kafka.controller.KafkaController)
[2019-04-23 14:04:44,505] INFO [Controller id=0] New topics: [Set(FromDigestion_2)], deleted topics: [Set()], new partition replica assignment [Map(FromDigestion_2-0 -> Vector(0, 1))] (kafka.controller.KafkaController)
[2019-04-23 14:04:44,505] INFO [Controller id=0] New partition creation callback for FromDigestion_2-0 (kafka.controller.KafkaController)
[2019-04-23 14:04:54,025] DEBUG [Controller id=0] Delete topics listener fired for topics ToDigestion to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:04:54,026] INFO [Controller id=0] Starting topic deletion for topics ToDigestion (kafka.controller.KafkaController)
[2019-04-23 14:04:54,026] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,026] INFO [Topic Deletion Manager 0], Deletion of topic ToDigestion (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,026] INFO [Topic Deletion Manager 0], Topic deletion callback for ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,030] INFO [Topic Deletion Manager 0], Partition deletion callback for ToDigestion-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,055] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:54,055] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:54,056] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:54,056] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:54,056] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=ToDigestion,Partition=0,Replica=0],[Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,060] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:54,060] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:54,061] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:54,061] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:54,082] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={ToDigestion-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:04:54,083] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,084] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,085] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition ToDigestion-0 of topic ToDigestion in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,086] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={ToDigestion-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:04:54,086] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,086] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,116] INFO [Topic Deletion Manager 0], Deletion of topic ToDigestion successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:54,117] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:04:54,120] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:04:57,562] DEBUG [Controller id=0] Delete topics listener fired for topics FromDigestion_1 to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:04:57,562] INFO [Controller id=0] Starting topic deletion for topics FromDigestion_1 (kafka.controller.KafkaController)
[2019-04-23 14:04:57,562] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,563] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_1 (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,563] INFO [Topic Deletion Manager 0], Topic deletion callback for FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,565] INFO [Topic Deletion Manager 0], Partition deletion callback for FromDigestion_1-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,585] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:57,585] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:57,585] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:57,585] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:57,585] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=FromDigestion_1,Partition=0,Replica=0],[Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,586] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:57,587] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:57,587] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:57,587] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:04:57,610] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_1-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:04:57,611] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,612] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,613] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition FromDigestion_1-0 of topic FromDigestion_1 in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,613] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_1-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:04:57,614] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,615] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,636] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_1 successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:04:57,638] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:04:57,640] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:05:01,194] DEBUG [Controller id=0] Delete topics listener fired for topics FromDigestion_2 to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:05:01,194] INFO [Controller id=0] Starting topic deletion for topics FromDigestion_2 (kafka.controller.KafkaController)
[2019-04-23 14:05:01,195] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,195] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_2 (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,196] INFO [Topic Deletion Manager 0], Topic deletion callback for FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,197] INFO [Topic Deletion Manager 0], Partition deletion callback for FromDigestion_2-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,217] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:05:01,217] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:05:01,218] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:05:01,218] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:05:01,219] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=FromDigestion_2,Partition=0,Replica=0],[Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,221] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:05:01,221] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:05:01,221] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:05:01,221] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:05:01,241] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:05:01,242] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,243] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,244] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition FromDigestion_2-0 of topic FromDigestion_2 in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,253] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:05:01,253] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,254] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,273] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_2 successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:05:01,275] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:05:01,277] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:06:20,165] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-04-23 14:06:41,606] INFO [Controller id=0] New topics: [Set(ToDigestion)], deleted topics: [Set()], new partition replica assignment [Map(ToDigestion-0 -> Vector(1, 0))] (kafka.controller.KafkaController)
[2019-04-23 14:06:41,606] INFO [Controller id=0] New partition creation callback for ToDigestion-0 (kafka.controller.KafkaController)
[2019-04-23 14:06:45,089] INFO [Controller id=0] New topics: [Set(FromDigestion_1)], deleted topics: [Set()], new partition replica assignment [Map(FromDigestion_1-0 -> Vector(1, 0))] (kafka.controller.KafkaController)
[2019-04-23 14:06:45,090] INFO [Controller id=0] New partition creation callback for FromDigestion_1-0 (kafka.controller.KafkaController)
[2019-04-23 14:06:47,422] INFO [Controller id=0] New topics: [Set(FromDigestion_2)], deleted topics: [Set()], new partition replica assignment [Map(FromDigestion_2-0 -> Vector(1, 0))] (kafka.controller.KafkaController)
[2019-04-23 14:06:47,423] INFO [Controller id=0] New partition creation callback for FromDigestion_2-0 (kafka.controller.KafkaController)
[2019-04-23 14:07:35,998] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:07:35,998] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(FromDigestion_2-0 -> Vector(1, 0), FromDigestion_1-0 -> Vector(1, 0), ToDigestion-0 -> Vector(1, 0))) (kafka.controller.KafkaController)
[2019-04-23 14:07:35,999] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:07:35,999] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:11:33,235] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(1), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(1), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(1), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(1), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(1), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(1), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(1), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))] (kafka.controller.KafkaController)
[2019-04-23 14:11:33,235] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2019-04-23 14:12:35,999] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:12:36,009] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(FromDigestion_1-0 -> Vector(1, 0), __consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), FromDigestion_2-0 -> Vector(1, 0), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1), ToDigestion-0 -> Vector(1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:12:36,011] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:12:36,011] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:12:36,011] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:12:36,011] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:17:36,012] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:17:36,019] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(FromDigestion_1-0 -> Vector(1, 0), __consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), FromDigestion_2-0 -> Vector(1, 0), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1), ToDigestion-0 -> Vector(1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:17:36,019] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:17:36,019] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:17:36,020] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:17:36,020] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:22:36,020] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:22:36,023] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(FromDigestion_1-0 -> Vector(1, 0), __consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), FromDigestion_2-0 -> Vector(1, 0), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1), ToDigestion-0 -> Vector(1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:22:36,023] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:22:36,023] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:22:36,024] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:22:36,024] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:27:36,024] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:27:36,029] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(FromDigestion_1-0 -> Vector(1, 0), __consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), FromDigestion_2-0 -> Vector(1, 0), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1), ToDigestion-0 -> Vector(1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:27:36,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:27:36,030] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:27:36,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:27:36,030] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:31:02,146] DEBUG [Controller id=0] Delete topics listener fired for topics ToDigestion to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:31:02,146] INFO [Controller id=0] Starting topic deletion for topics ToDigestion (kafka.controller.KafkaController)
[2019-04-23 14:31:02,146] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,146] INFO [Topic Deletion Manager 0], Deletion of topic ToDigestion (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,146] INFO [Topic Deletion Manager 0], Topic deletion callback for ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,149] INFO [Topic Deletion Manager 0], Partition deletion callback for ToDigestion-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,151] INFO [RequestSendThread controllerId=0] Controller 0 connected to uplink:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-04-23 14:31:02,151] INFO [RequestSendThread controllerId=0] Controller 0 connected to uplink:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-04-23 14:31:02,175] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:02,175] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:02,176] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:02,176] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:02,177] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=ToDigestion,Partition=0,Replica=0],[Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,179] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:02,179] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:02,179] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:02,179] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:02,197] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={ToDigestion-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:31:02,198] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=ToDigestion,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,198] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,199] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition ToDigestion-0 of topic ToDigestion in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,199] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={ToDigestion-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:31:02,199] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=ToDigestion,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,200] INFO [Topic Deletion Manager 0], Handling deletion for topics ToDigestion (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,212] INFO [Topic Deletion Manager 0], Deletion of topic ToDigestion successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:02,214] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:31:02,216] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:31:06,336] DEBUG [Controller id=0] Delete topics listener fired for topics FromDigestion_1 to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:31:06,337] INFO [Controller id=0] Starting topic deletion for topics FromDigestion_1 (kafka.controller.KafkaController)
[2019-04-23 14:31:06,337] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,338] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_1 (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,338] INFO [Topic Deletion Manager 0], Topic deletion callback for FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,339] INFO [Topic Deletion Manager 0], Partition deletion callback for FromDigestion_1-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,355] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:06,355] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:06,356] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:06,356] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:06,356] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=FromDigestion_1,Partition=0,Replica=1],[Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,359] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:06,359] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:06,359] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:06,359] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:06,379] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_1-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:31:06,379] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_1,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,379] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,380] INFO [Topic Deletion Manager 0], Deletion for replicas 1 for partition FromDigestion_1-0 of topic FromDigestion_1 in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,380] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_1-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:31:06,380] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_1,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,380] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_1 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,398] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_1 successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:06,401] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:31:06,402] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:31:09,906] DEBUG [Controller id=0] Delete topics listener fired for topics FromDigestion_2 to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:31:09,907] INFO [Controller id=0] Starting topic deletion for topics FromDigestion_2 (kafka.controller.KafkaController)
[2019-04-23 14:31:09,907] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,908] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_2 (re)started (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,908] INFO [Topic Deletion Manager 0], Topic deletion callback for FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,912] INFO [Topic Deletion Manager 0], Partition deletion callback for FromDigestion_2-0 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,941] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:09,941] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:09,942] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:09,942] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:09,942] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=FromDigestion_2,Partition=0,Replica=1],[Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,944] DEBUG The stop replica request (delete = true) sent to broker 1 is [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:09,944] DEBUG The stop replica request (delete = false) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:09,945] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:09,945] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-04-23 14:31:09,969] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:31:09,969] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_2,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,970] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,971] INFO [Topic Deletion Manager 0], Deletion for replicas 0 for partition FromDigestion_2-0 of topic FromDigestion_2 in progress (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,972] DEBUG [Controller id=0] Delete topic callback invoked for StopReplicaResponse(responses={FromDigestion_2-0=NONE}, error=NONE) (kafka.controller.KafkaController)
[2019-04-23 14:31:09,972] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=FromDigestion_2,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,972] INFO [Topic Deletion Manager 0], Handling deletion for topics FromDigestion_2 (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,991] INFO [Topic Deletion Manager 0], Deletion of topic FromDigestion_2 successfully completed (kafka.controller.TopicDeletionManager)
[2019-04-23 14:31:09,994] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-04-23 14:31:09,995] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-04-23 14:32:36,041] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:32:36,045] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(__consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:32:36,046] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:32:36,046] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:32:36,046] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:32:36,046] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:37:36,048] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:37:36,050] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(__consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:37:36,050] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:37:36,050] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:37:36,050] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:37:36,051] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:42:36,051] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:42:36,055] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(__consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:42:36,056] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:42:36,056] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:42:36,056] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:42:36,056] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:47:36,057] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:47:36,059] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(__consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:47:36,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:47:36,060] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:47:36,060] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:47:36,060] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:52:36,060] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:52:36,063] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(__consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:52:36,064] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:52:36,064] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:52:36,064] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:52:36,064] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:57:36,065] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-23 14:57:36,067] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(__consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-23 14:57:36,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-04-23 14:57:36,067] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-04-23 14:57:36,068] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-23 14:57:36,068] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
